import abc
from dataclasses import dataclass
from itertools import zip_longest
from math import log10
from typing import Sequence, Dict

import colorama

from mdiff.utils import len_or_1


@dataclass
class ConsoleCharacters:
    sep_line_num: str
    symbol_line_equal: str
    symbol_line_delete: str
    symbol_line_insert: str
    symbol_line_move: str
    symbol_line_move_up: str
    symbol_line_move_down: str
    symbol_line_replace: str
    symbol_line_similar: str
    line_fill_char: str



console_characters: Dict[str, ConsoleCharacters] = {
    'ascii': ascii_console_characters,
    'utf8': unicode_console_characters
}


def longest_string_in_list(s_list: Sequence[str]):
    return max(s_list, key=lambda x: len(x))


def digits_number(a: int):
    return int(log10(a)) + 1


class ConsolePrinter(abc.ABC):
    @abc.abstractmethod
    def print(self):
        pass
